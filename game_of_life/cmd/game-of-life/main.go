package main

import (
	"github.com/driver-navigator/code-kata/game-of-life/internal/core"
	"github.com/driver-navigator/code-kata/game-of-life/internal/core/printer"
)

const (
	ALIVE_CELL = core.ALIVE
	DEAD_CELL  = core.DEAD
)

func main() {
	initialGeneration, err := core.NewGeneration(12, 12, [][]bool{
		{DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL},
		{DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL},
		{DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL},
		{DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL},
		{DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL},
		{DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL},
		{DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL},
		{DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL},
		{DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL},
		{DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL, DEAD_CELL, DEAD_CELL, ALIVE_CELL},
		{DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL, DEAD_CELL, ALIVE_CELL, ALIVE_CELL},
		{DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL, DEAD_CELL},
	})

	if err != nil {
		panic(err)
	}

	printer := printer.NewPrinter()
	game := core.NewGameOfLife(initialGeneration, printer)
	game.Play()
}
